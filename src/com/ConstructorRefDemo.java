package com;

/**
 * Аналогично тому, как создаются ссылки на методы, можно создавать также ссылки на конструкторы.
 * Используемый при этом синтаксис имеет следующую общую форму:  имя класса: : new
 * Данную ссылку можно присвоить ссылке на любой функциональный интерфейс, который  определяет метод, совместимый с конструктором
 * <p>
 * // Демонстрация использования ссылок на конструкторы.
 * // MyFunc - функциональный интерфейс, метод которого возвращает ссылку на MyClass
 */
interface MyFunc3 {
    MyClass9 func(String s);
}

class MyClass9 {
    private String str;

    // Этот конструктор принимает аргумент
    MyClass9(String s) {
        str = s;
    }

    // Это конструктор по умолчанию
    MyClass9() {
        str = "";
    }

    String getStr() {
        return str;
    }

}

public class ConstructorRefDemo {
    public static void main(String[] args) {
        // Создать ссылку на конструктор MyClass. Поскольку метод func() интерфейса MyFunc принимает аргумент,
// new ссылается на параметризованный конструктор MyClass, а не на конструктор по умолчанию.

        MyFunc3 myClassCons = MyClass9::new;  //Ссылка на конструктор

        // Создать экземпляр MyClass посредством ссылки на конструктор
        MyClass9 mc = myClassCons.func("Тестирование");

        // Использовать только что созданный экземпляр MyClass
        System.out.println("Cтpoкa str в mc: " + mc.getStr());
    }
}
/*Обратите внимание на то, что метод func (} интерфейса MyFunc возвращает ссылку типа MyClass и принимает параметр типа String.
Далее, заметьте, что класс MyClass определяет два конструктора. Для первого из них указан параметр типа String.
Второй - это конструктор по умолчанию, не имеющий параметров.*/

/*Если бы вы захотели использовать MyClass: : new для вызова конструктора по умолчанию класса MyClass, то вам понадобился бы функциональный интерфейс,
 который определяет метод, не имеющий параметров.
 Например, если вы определите функциональный интерфейс MyFunc2, как показано ниже:
interface MyFunc2
MyClass func{);
то с помощью следующей инструкции сможете присвоить MyClassCons ссылку на конструктор по умолчанию (т.е. не имеющий параметров) класса MyClass:
MyFunc2 myClassCons = MyClass::new;
В общем случае при использовании ссылок вида ::new  будет вызываться конструктор,параметры которого соответствуют параметрам, указанным в функциональном интерфейсе.*/