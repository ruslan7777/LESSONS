package com;

/**
 * Created by RUSLAN77 on  03.02.2017 in Ukraine
 * Автоупаковка и автораспаковка выполняются всякий раз, когда объект необходимо преобразовать в простой тип, а простой тип — в объект. Так, автораспаковка производится при вычислении выражений, и если требуется, то результат вычисления упаковывается. Рассмотрим в качестве примера приведенную ниже программу.
 *
 * В данной программе особое внимание обратите на следующую строку кода:
 *
 * ++iOb;
 * В ней значение объекта iOb должно быть увеличено на единицу. Происходит это следующим образом: объект iOb распаковывается, полученное значение инкрементируется, а результат снова упаковывается в объект iOb.
 *
 * Благодаря автораспаковке объекты оболочек целочисленных типов, например Integer, можно использовать в операторах switch. В качестве примера рассмотрим следующий фрагмент кода:
 * <p>
 * Integer iOb = 2;
 * switch(iOb) {
 * case 1: System.out.println("one") ;
 * break;
 * case 2: System.out.println("two");
 * break;
 * default: System.out.println("error") ;
 * }
 * При вычислении выражения в операторе switch объект iOb распаковывается и последующей обработке подвергается значение типа int, упакованное в этом объекте.
 * <p>
 * Как следует из приведенных выше примеров, выражения, в которых применяются объекты оболочек простых типов, становятся интуитивно понятными благодаря автоупаковке и автораспаковке. До появления версии JDK 5 для достижения аналогичного результата в программе приходилось прибегать к приведению типов и вызовам специальных методов вроде intValue().
 */
// Автоупаковка и автораспаковка в выражениях.
class AutoBox3 {
    public static void main(String args[]) {
        Integer iOb, iOb2;
        int i;

        iOb = 99;
        System.out.println("Original value of iOb: " + iOb);

        // В следующем выражении объект iOb автоматически     распаковывается, производятся вычисления, а результат снова упаковывается в объект iOb.
        ++iOb;
        System.out.println("After ++iOb: и " + iOb);

        // В последующем выражении производится автораспаковка объекта iOb, к полученному значению прибавляется число 10, а результат снова упаковывается в объект iOb.
        iOb += 10;
        System.out.println("After iOb += 10: " + iOb);

        //И в следующем выражении объект iOb автоматически распаковывается, выполняются вычисления, а результат  снова упаковывается в объект iOb.
        iOb2 = iOb + (iOb / 3);
        System.out.println("iOb2 after expression: " + iOb2);

        // А в этом случае вычисляется то же самое выражение, но повторная упаковка не производится,
        i = iOb + (iOb / 3);

        System.out.println("i after expression: " + i);
    }
}