package com;

/**
 * Created by RUSLAN77 on  01.12.2016 in Ukraine
 * Демонстрация очередности вызова конструкторов.
 */

// Создать суперкласс
class A2 {
    A2() {
        System.out.println("Constructor A2");
    }
}

// Создать подкласс путем расширения класса А2
class B2 extends A2 {
    B2() {
        System.out.println("Constructor B2");
    }
}

// Создать подкласс путем расширения класса В2
class C2 extends B2 {
    C2() {
        System.out.println("Constructor C2");
    }

}

public class OrderOfConstruction {
    public static void main(String[] args) {
        C2 c = new C2();
    }
}
/*Как видите, конструкторы вызываются в порядке наследования классов.По зрелом размышлении можно прийти к выводу, что вызов конструкторов в порядке
наследования классов имеет определенный смысл. Ведь суперклассу ничего не известно ни об одном из производных от него подклассов, и поэтому любая инициализация,
которая требуется его членам, не только должна осуществляться независимо от инициализации членов подкласса, но и, возможно, является необходимой подготовительной
операцией для этого процесса. Следовательно, она должна выполняться первой.*/